version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: civiclens-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: civiclens-ai
    networks:
      - civiclens-network

  # AI Microservice (Python FastAPI)
  ai-microservice:
    build:
      context: ./ai-microservice
      dockerfile: Dockerfile
    container_name: civiclens-ai-service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-mistralai/mixtral-8x7b-instruct}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - WHISPER_MODEL=${WHISPER_MODEL:-base}
      - LOG_LEVEL=INFO
    volumes:
      - ./ai-microservice:/app
      - ai_models:/app/models
    depends_on:
      - mongodb
    networks:
      - civiclens-network

  # Backend (Node.js Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: civiclens-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/civiclens-ai?authSource=admin
      - AI_SERVICE_URL=http://ai-microservice:8000
      - FRONTEND_URL=http://localhost:3000
      - LOG_LEVEL=info
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    depends_on:
      - mongodb
      - ai-microservice
    networks:
      - civiclens-network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: civiclens-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_APP_NAME=CivicLens AI
      - VITE_APP_VERSION=1.0.0
    depends_on:
      - backend
    networks:
      - civiclens-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: civiclens-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - civiclens-network

volumes:
  mongodb_data:
  ai_models:
  backend_logs:

networks:
  civiclens-network:
    driver: bridge